//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34014
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyAirport.Client.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersoFaultException", Namespace="http://schemas.datacontract.org/2004/07/MyAirport.Entities")]
    [System.SerializableAttribute()]
    public partial class PersoFaultException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int V1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int V2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int V1 {
            get {
                return this.V1Field;
            }
            set {
                if ((this.V1Field.Equals(value) != true)) {
                    this.V1Field = value;
                    this.RaisePropertyChanged("V1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int V2 {
            get {
                return this.V2Field;
            }
            set {
                if ((this.V2Field.Equals(value) != true)) {
                    this.V2Field = value;
                    this.RaisePropertyChanged("V2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Parametres", Namespace="http://schemas.datacontract.org/2004/07/MyAirport.Entities")]
    [System.SerializableAttribute()]
    public partial class Parametres : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastConnectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Param1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Param2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastConnect {
            get {
                return this.LastConnectField;
            }
            set {
                if ((this.LastConnectField.Equals(value) != true)) {
                    this.LastConnectField = value;
                    this.RaisePropertyChanged("LastConnect");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Param1 {
            get {
                return this.Param1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Param1Field, value) != true)) {
                    this.Param1Field = value;
                    this.RaisePropertyChanged("Param1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Param2 {
            get {
                return this.Param2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Param2Field, value) != true)) {
                    this.Param2Field = value;
                    this.RaisePropertyChanged("Param2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Historique", Namespace="http://schemas.datacontract.org/2004/07/MyAirport.Entities")]
    [System.SerializableAttribute()]
    public partial class Historique : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAirport.Client.ServiceReference1.VolCriteres RechercheField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAirport.Client.ServiceReference1.VolCriteres Recherche {
            get {
                return this.RechercheField;
            }
            set {
                if ((object.ReferenceEquals(this.RechercheField, value) != true)) {
                    this.RechercheField = value;
                    this.RaisePropertyChanged("Recherche");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VolCriteres", Namespace="http://schemas.datacontract.org/2004/07/MyAirport.Entities")]
    [System.SerializableAttribute()]
    public partial class VolCriteres : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CompagniesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateDebutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateFinField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Compagnies {
            get {
                return this.CompagniesField;
            }
            set {
                if ((object.ReferenceEquals(this.CompagniesField, value) != true)) {
                    this.CompagniesField = value;
                    this.RaisePropertyChanged("Compagnies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateDebut {
            get {
                return this.dateDebutField;
            }
            set {
                if ((this.dateDebutField.Equals(value) != true)) {
                    this.dateDebutField = value;
                    this.RaisePropertyChanged("dateDebut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateFin {
            get {
                return this.dateFinField;
            }
            set {
                if ((this.dateFinField.Equals(value) != true)) {
                    this.dateFinField = value;
                    this.RaisePropertyChanged("dateFin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VolDefinition", Namespace="http://schemas.datacontract.org/2004/07/MyAirport.Entities")]
    [System.SerializableAttribute()]
    public partial class VolDefinition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] BanquesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CIEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeCIEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int JexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LigneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Aer {
            get {
                return this.AerField;
            }
            set {
                if ((object.ReferenceEquals(this.AerField, value) != true)) {
                    this.AerField = value;
                    this.RaisePropertyChanged("Aer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Banques {
            get {
                return this.BanquesField;
            }
            set {
                if ((object.ReferenceEquals(this.BanquesField, value) != true)) {
                    this.BanquesField = value;
                    this.RaisePropertyChanged("Banques");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CIE {
            get {
                return this.CIEField;
            }
            set {
                if ((object.ReferenceEquals(this.CIEField, value) != true)) {
                    this.CIEField = value;
                    this.RaisePropertyChanged("CIE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeCIE {
            get {
                return this.CodeCIEField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeCIEField, value) != true)) {
                    this.CodeCIEField = value;
                    this.RaisePropertyChanged("CodeCIE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Jex {
            get {
                return this.JexField;
            }
            set {
                if ((this.JexField.Equals(value) != true)) {
                    this.JexField = value;
                    this.RaisePropertyChanged("Jex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ligne {
            get {
                return this.LigneField;
            }
            set {
                if ((object.ReferenceEquals(this.LigneField, value) != true)) {
                    this.LigneField = value;
                    this.RaisePropertyChanged("Ligne");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BagageCriteres", Namespace="http://schemas.datacontract.org/2004/07/MyAirport.Entities")]
    [System.SerializableAttribute()]
    public partial class BagageCriteres : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] CompagniesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateDebutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateFinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncludeBsmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncludeNoRecolleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncludePseudoBsmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IncludeRecolleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LigneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SortieSuretesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] StatutSuretesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] StatutTemporelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TemplateCodeIataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] TypeTachesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> idVolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Compagnies {
            get {
                return this.CompagniesField;
            }
            set {
                if ((object.ReferenceEquals(this.CompagniesField, value) != true)) {
                    this.CompagniesField = value;
                    this.RaisePropertyChanged("Compagnies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateDebut {
            get {
                return this.DateDebutField;
            }
            set {
                if ((this.DateDebutField.Equals(value) != true)) {
                    this.DateDebutField = value;
                    this.RaisePropertyChanged("DateDebut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateFin {
            get {
                return this.DateFinField;
            }
            set {
                if ((this.DateFinField.Equals(value) != true)) {
                    this.DateFinField = value;
                    this.RaisePropertyChanged("DateFin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncludeBsm {
            get {
                return this.IncludeBsmField;
            }
            set {
                if ((this.IncludeBsmField.Equals(value) != true)) {
                    this.IncludeBsmField = value;
                    this.RaisePropertyChanged("IncludeBsm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncludeNoRecolle {
            get {
                return this.IncludeNoRecolleField;
            }
            set {
                if ((this.IncludeNoRecolleField.Equals(value) != true)) {
                    this.IncludeNoRecolleField = value;
                    this.RaisePropertyChanged("IncludeNoRecolle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncludePseudoBsm {
            get {
                return this.IncludePseudoBsmField;
            }
            set {
                if ((this.IncludePseudoBsmField.Equals(value) != true)) {
                    this.IncludePseudoBsmField = value;
                    this.RaisePropertyChanged("IncludePseudoBsm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IncludeRecolle {
            get {
                return this.IncludeRecolleField;
            }
            set {
                if ((this.IncludeRecolleField.Equals(value) != true)) {
                    this.IncludeRecolleField = value;
                    this.RaisePropertyChanged("IncludeRecolle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Ligne {
            get {
                return this.LigneField;
            }
            set {
                if ((this.LigneField.Equals(value) != true)) {
                    this.LigneField = value;
                    this.RaisePropertyChanged("Ligne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SortieSuretes {
            get {
                return this.SortieSuretesField;
            }
            set {
                if ((object.ReferenceEquals(this.SortieSuretesField, value) != true)) {
                    this.SortieSuretesField = value;
                    this.RaisePropertyChanged("SortieSuretes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] StatutSuretes {
            get {
                return this.StatutSuretesField;
            }
            set {
                if ((object.ReferenceEquals(this.StatutSuretesField, value) != true)) {
                    this.StatutSuretesField = value;
                    this.RaisePropertyChanged("StatutSuretes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] StatutTemporel {
            get {
                return this.StatutTemporelField;
            }
            set {
                if ((object.ReferenceEquals(this.StatutTemporelField, value) != true)) {
                    this.StatutTemporelField = value;
                    this.RaisePropertyChanged("StatutTemporel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateCodeIata {
            get {
                return this.TemplateCodeIataField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateCodeIataField, value) != true)) {
                    this.TemplateCodeIataField = value;
                    this.RaisePropertyChanged("TemplateCodeIata");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] TypeTaches {
            get {
                return this.TypeTachesField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeTachesField, value) != true)) {
                    this.TypeTachesField = value;
                    this.RaisePropertyChanged("TypeTaches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> idVol {
            get {
                return this.idVolField;
            }
            set {
                if ((this.idVolField.Equals(value) != true)) {
                    this.idVolField = value;
                    this.RaisePropertyChanged("idVol");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BagageDefinition", Namespace="http://schemas.datacontract.org/2004/07/MyAirport.Entities")]
    [System.SerializableAttribute()]
    public partial class BagageDefinition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CieeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeIATAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EmbField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdVolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LigneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool RecolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatutSureteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAirport.Client.ServiceReference1.TraceDefinition[] TraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAirport.Client.ServiceReference1.VolDefinition VolApportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAirport.Client.ServiceReference1.VolDefinition VolAuDepartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyAirport.Client.ServiceReference1.VolDefinition VolContinuationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ciee {
            get {
                return this.CieeField;
            }
            set {
                if ((object.ReferenceEquals(this.CieeField, value) != true)) {
                    this.CieeField = value;
                    this.RaisePropertyChanged("Ciee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeIATA {
            get {
                return this.CodeIATAField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeIATAField, value) != true)) {
                    this.CodeIATAField = value;
                    this.RaisePropertyChanged("CodeIATA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creation {
            get {
                return this.CreationField;
            }
            set {
                if ((object.ReferenceEquals(this.CreationField, value) != true)) {
                    this.CreationField = value;
                    this.RaisePropertyChanged("Creation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreation {
            get {
                return this.DateCreationField;
            }
            set {
                if ((this.DateCreationField.Equals(value) != true)) {
                    this.DateCreationField = value;
                    this.RaisePropertyChanged("DateCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Emb {
            get {
                return this.EmbField;
            }
            set {
                if ((this.EmbField.Equals(value) != true)) {
                    this.EmbField = value;
                    this.RaisePropertyChanged("Emb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdVol {
            get {
                return this.IdVolField;
            }
            set {
                if ((this.IdVolField.Equals(value) != true)) {
                    this.IdVolField = value;
                    this.RaisePropertyChanged("IdVol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ligne {
            get {
                return this.LigneField;
            }
            set {
                if ((object.ReferenceEquals(this.LigneField, value) != true)) {
                    this.LigneField = value;
                    this.RaisePropertyChanged("Ligne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Recol {
            get {
                return this.RecolField;
            }
            set {
                if ((this.RecolField.Equals(value) != true)) {
                    this.RecolField = value;
                    this.RaisePropertyChanged("Recol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatutSurete {
            get {
                return this.StatutSureteField;
            }
            set {
                if ((object.ReferenceEquals(this.StatutSureteField, value) != true)) {
                    this.StatutSureteField = value;
                    this.RaisePropertyChanged("StatutSurete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAirport.Client.ServiceReference1.TraceDefinition[] Trace {
            get {
                return this.TraceField;
            }
            set {
                if ((object.ReferenceEquals(this.TraceField, value) != true)) {
                    this.TraceField = value;
                    this.RaisePropertyChanged("Trace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Typ {
            get {
                return this.TypField;
            }
            set {
                if ((object.ReferenceEquals(this.TypField, value) != true)) {
                    this.TypField = value;
                    this.RaisePropertyChanged("Typ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAirport.Client.ServiceReference1.VolDefinition VolApport {
            get {
                return this.VolApportField;
            }
            set {
                if ((object.ReferenceEquals(this.VolApportField, value) != true)) {
                    this.VolApportField = value;
                    this.RaisePropertyChanged("VolApport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAirport.Client.ServiceReference1.VolDefinition VolAuDepart {
            get {
                return this.VolAuDepartField;
            }
            set {
                if ((object.ReferenceEquals(this.VolAuDepartField, value) != true)) {
                    this.VolAuDepartField = value;
                    this.RaisePropertyChanged("VolAuDepart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyAirport.Client.ServiceReference1.VolDefinition VolContinuation {
            get {
                return this.VolContinuationField;
            }
            set {
                if ((object.ReferenceEquals(this.VolContinuationField, value) != true)) {
                    this.VolContinuationField = value;
                    this.RaisePropertyChanged("VolContinuation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TraceDefinition", Namespace="http://schemas.datacontract.org/2004/07/MyAirport.Entities")]
    [System.SerializableAttribute()]
    public partial class TraceDefinition : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DatePassageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformationsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocalisationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DatePassage {
            get {
                return this.DatePassageField;
            }
            set {
                if ((this.DatePassageField.Equals(value) != true)) {
                    this.DatePassageField = value;
                    this.RaisePropertyChanged("DatePassage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Informations {
            get {
                return this.InformationsField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationsField, value) != true)) {
                    this.InformationsField = value;
                    this.RaisePropertyChanged("Informations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Localisation {
            get {
                return this.LocalisationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalisationField, value) != true)) {
                    this.LocalisationField = value;
                    this.RaisePropertyChanged("Localisation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Statut {
            get {
                return this.StatutField;
            }
            set {
                if ((object.ReferenceEquals(this.StatutField, value) != true)) {
                    this.StatutField = value;
                    this.RaisePropertyChanged("Statut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TestFaultException", ReplyAction="http://tempuri.org/IService1/TestFaultExceptionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(MyAirport.Client.ServiceReference1.PersoFaultException), Action="http://tempuri.org/IService1/TestFaultExceptionPersoFaultExceptionFault", Name="PersoFaultException", Namespace="http://schemas.datacontract.org/2004/07/MyAirport.Entities")]
        int TestFaultException(int v1, int v2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TestFaultException", ReplyAction="http://tempuri.org/IService1/TestFaultExceptionResponse")]
        System.Threading.Tasks.Task<int> TestFaultExceptionAsync(int v1, int v2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MesParamatres", ReplyAction="http://tempuri.org/IService1/MesParamatresResponse")]
        MyAirport.Client.ServiceReference1.Parametres MesParamatres();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MesParamatres", ReplyAction="http://tempuri.org/IService1/MesParamatresResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.Parametres> MesParamatresAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="TestAction")]
        void UpdateMesParametres(MyAirport.Client.ServiceReference1.Parametres parameters);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="TestAction")]
        System.Threading.Tasks.Task UpdateMesParametresAsync(MyAirport.Client.ServiceReference1.Parametres parameters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MonHistorique", ReplyAction="http://tempuri.org/IService1/MonHistoriqueResponse")]
        MyAirport.Client.ServiceReference1.Historique[] MonHistorique();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MonHistorique", ReplyAction="http://tempuri.org/IService1/MonHistoriqueResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.Historique[]> MonHistoriqueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateVol", ReplyAction="http://tempuri.org/IService1/CreateVolResponse")]
        void CreateVol(MyAirport.Client.ServiceReference1.VolDefinition newVol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateVol", ReplyAction="http://tempuri.org/IService1/CreateVolResponse")]
        System.Threading.Tasks.Task CreateVolAsync(MyAirport.Client.ServiceReference1.VolDefinition newVol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherVolsDeLaCompagnie", ReplyAction="http://tempuri.org/IService1/RechercherVolsDeLaCompagnieResponse")]
        MyAirport.Client.ServiceReference1.VolDefinition[] RechercherVolsDeLaCompagnie(string compagnie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherVolsDeLaCompagnie", ReplyAction="http://tempuri.org/IService1/RechercherVolsDeLaCompagnieResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition[]> RechercherVolsDeLaCompagnieAsync(string compagnie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherVolsParDate", ReplyAction="http://tempuri.org/IService1/RechercherVolsParDateResponse")]
        MyAirport.Client.ServiceReference1.VolDefinition[] RechercherVolsParDate(System.DateTime debut, System.DateTime fin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherVolsParDate", ReplyAction="http://tempuri.org/IService1/RechercherVolsParDateResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition[]> RechercherVolsParDateAsync(System.DateTime debut, System.DateTime fin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherVolsDuJour", ReplyAction="http://tempuri.org/IService1/RechercherVolsDuJourResponse")]
        MyAirport.Client.ServiceReference1.VolDefinition[] RechercherVolsDuJour();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherVolsDuJour", ReplyAction="http://tempuri.org/IService1/RechercherVolsDuJourResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition[]> RechercherVolsDuJourAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DetailVol", ReplyAction="http://tempuri.org/IService1/DetailVolResponse")]
        MyAirport.Client.ServiceReference1.VolDefinition DetailVol(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DetailVol", ReplyAction="http://tempuri.org/IService1/DetailVolResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition> DetailVolAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MesCriteresFiltre", ReplyAction="http://tempuri.org/IService1/MesCriteresFiltreResponse")]
        MyAirport.Client.ServiceReference1.BagageCriteres MesCriteresFiltre();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MesCriteresFiltre", ReplyAction="http://tempuri.org/IService1/MesCriteresFiltreResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageCriteres> MesCriteresFiltreAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagages", ReplyAction="http://tempuri.org/IService1/RechercherBagagesResponse")]
        MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagages(MyAirport.Client.ServiceReference1.BagageCriteres critere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagages", ReplyAction="http://tempuri.org/IService1/RechercherBagagesResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesAsync(MyAirport.Client.ServiceReference1.BagageCriteres critere);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesDuVol", ReplyAction="http://tempuri.org/IService1/RechercherBagagesDuVolResponse")]
        MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesDuVol(System.Nullable<int> idVol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesDuVol", ReplyAction="http://tempuri.org/IService1/RechercherBagagesDuVolResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesDuVolAsync(System.Nullable<int> idVol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesDeLaCompagnie", ReplyAction="http://tempuri.org/IService1/RechercherBagagesDeLaCompagnieResponse")]
        MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesDeLaCompagnie(string compagnie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesDeLaCompagnie", ReplyAction="http://tempuri.org/IService1/RechercherBagagesDeLaCompagnieResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesDeLaCompagnieAsync(string compagnie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesParIATA", ReplyAction="http://tempuri.org/IService1/RechercherBagagesParIATAResponse")]
        MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesParIATA(string codeIATA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesParIATA", ReplyAction="http://tempuri.org/IService1/RechercherBagagesParIATAResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesParIATAAsync(string codeIATA);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesParDate", ReplyAction="http://tempuri.org/IService1/RechercherBagagesParDateResponse")]
        MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesParDate(System.DateTime debut, System.DateTime fin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesParDate", ReplyAction="http://tempuri.org/IService1/RechercherBagagesParDateResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesParDateAsync(System.DateTime debut, System.DateTime fin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesDuJour", ReplyAction="http://tempuri.org/IService1/RechercherBagagesDuJourResponse")]
        MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesDuJour();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RechercherBagagesDuJour", ReplyAction="http://tempuri.org/IService1/RechercherBagagesDuJourResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesDuJourAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DetailBagage", ReplyAction="http://tempuri.org/IService1/DetailBagageResponse")]
        MyAirport.Client.ServiceReference1.BagageDefinition DetailBagage(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DetailBagage", ReplyAction="http://tempuri.org/IService1/DetailBagageResponse")]
        System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition> DetailBagageAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : MyAirport.Client.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<MyAirport.Client.ServiceReference1.IService1>, MyAirport.Client.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int TestFaultException(int v1, int v2) {
            return base.Channel.TestFaultException(v1, v2);
        }
        
        public System.Threading.Tasks.Task<int> TestFaultExceptionAsync(int v1, int v2) {
            return base.Channel.TestFaultExceptionAsync(v1, v2);
        }
        
        public MyAirport.Client.ServiceReference1.Parametres MesParamatres() {
            return base.Channel.MesParamatres();
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.Parametres> MesParamatresAsync() {
            return base.Channel.MesParamatresAsync();
        }
        
        public void UpdateMesParametres(MyAirport.Client.ServiceReference1.Parametres parameters) {
            base.Channel.UpdateMesParametres(parameters);
        }
        
        public System.Threading.Tasks.Task UpdateMesParametresAsync(MyAirport.Client.ServiceReference1.Parametres parameters) {
            return base.Channel.UpdateMesParametresAsync(parameters);
        }
        
        public MyAirport.Client.ServiceReference1.Historique[] MonHistorique() {
            return base.Channel.MonHistorique();
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.Historique[]> MonHistoriqueAsync() {
            return base.Channel.MonHistoriqueAsync();
        }
        
        public void CreateVol(MyAirport.Client.ServiceReference1.VolDefinition newVol) {
            base.Channel.CreateVol(newVol);
        }
        
        public System.Threading.Tasks.Task CreateVolAsync(MyAirport.Client.ServiceReference1.VolDefinition newVol) {
            return base.Channel.CreateVolAsync(newVol);
        }
        
        public MyAirport.Client.ServiceReference1.VolDefinition[] RechercherVolsDeLaCompagnie(string compagnie) {
            return base.Channel.RechercherVolsDeLaCompagnie(compagnie);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition[]> RechercherVolsDeLaCompagnieAsync(string compagnie) {
            return base.Channel.RechercherVolsDeLaCompagnieAsync(compagnie);
        }
        
        public MyAirport.Client.ServiceReference1.VolDefinition[] RechercherVolsParDate(System.DateTime debut, System.DateTime fin) {
            return base.Channel.RechercherVolsParDate(debut, fin);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition[]> RechercherVolsParDateAsync(System.DateTime debut, System.DateTime fin) {
            return base.Channel.RechercherVolsParDateAsync(debut, fin);
        }
        
        public MyAirport.Client.ServiceReference1.VolDefinition[] RechercherVolsDuJour() {
            return base.Channel.RechercherVolsDuJour();
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition[]> RechercherVolsDuJourAsync() {
            return base.Channel.RechercherVolsDuJourAsync();
        }
        
        public MyAirport.Client.ServiceReference1.VolDefinition DetailVol(int id) {
            return base.Channel.DetailVol(id);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.VolDefinition> DetailVolAsync(int id) {
            return base.Channel.DetailVolAsync(id);
        }
        
        public MyAirport.Client.ServiceReference1.BagageCriteres MesCriteresFiltre() {
            return base.Channel.MesCriteresFiltre();
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageCriteres> MesCriteresFiltreAsync() {
            return base.Channel.MesCriteresFiltreAsync();
        }
        
        public MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagages(MyAirport.Client.ServiceReference1.BagageCriteres critere) {
            return base.Channel.RechercherBagages(critere);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesAsync(MyAirport.Client.ServiceReference1.BagageCriteres critere) {
            return base.Channel.RechercherBagagesAsync(critere);
        }
        
        public MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesDuVol(System.Nullable<int> idVol) {
            return base.Channel.RechercherBagagesDuVol(idVol);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesDuVolAsync(System.Nullable<int> idVol) {
            return base.Channel.RechercherBagagesDuVolAsync(idVol);
        }
        
        public MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesDeLaCompagnie(string compagnie) {
            return base.Channel.RechercherBagagesDeLaCompagnie(compagnie);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesDeLaCompagnieAsync(string compagnie) {
            return base.Channel.RechercherBagagesDeLaCompagnieAsync(compagnie);
        }
        
        public MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesParIATA(string codeIATA) {
            return base.Channel.RechercherBagagesParIATA(codeIATA);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesParIATAAsync(string codeIATA) {
            return base.Channel.RechercherBagagesParIATAAsync(codeIATA);
        }
        
        public MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesParDate(System.DateTime debut, System.DateTime fin) {
            return base.Channel.RechercherBagagesParDate(debut, fin);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesParDateAsync(System.DateTime debut, System.DateTime fin) {
            return base.Channel.RechercherBagagesParDateAsync(debut, fin);
        }
        
        public MyAirport.Client.ServiceReference1.BagageDefinition[] RechercherBagagesDuJour() {
            return base.Channel.RechercherBagagesDuJour();
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition[]> RechercherBagagesDuJourAsync() {
            return base.Channel.RechercherBagagesDuJourAsync();
        }
        
        public MyAirport.Client.ServiceReference1.BagageDefinition DetailBagage(int id) {
            return base.Channel.DetailBagage(id);
        }
        
        public System.Threading.Tasks.Task<MyAirport.Client.ServiceReference1.BagageDefinition> DetailBagageAsync(int id) {
            return base.Channel.DetailBagageAsync(id);
        }
    }
}
